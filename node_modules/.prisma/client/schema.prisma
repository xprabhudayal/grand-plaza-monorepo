// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Guest {
  id           String    @id @default(cuid())
  name         String
  email        String    @unique
  phoneNumber  String?
  roomNumber   String
  checkInDate  DateTime
  checkOutDate DateTime?
  isActive     Boolean   @default(true)
  orders       Order[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@index([roomNumber])
  @@index([email])
}

model Category {
  id           String     @id @default(cuid())
  name         String     @unique
  description  String?
  isActive     Boolean    @default(true)
  displayOrder Int        @default(0)
  menuItems    MenuItem[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model MenuItem {
  id              String      @id @default(cuid())
  name            String
  description     String?
  price           Float // Using Float instead of Decimal for SQLite
  category        Category    @relation(fields: [categoryId], references: [id])
  categoryId      String
  isAvailable     Boolean     @default(true)
  preparationTime Int         @default(15) // in minutes
  dietary         String? // JSON string for dietary info, e.g., "vegetarian,gluten-free,vegan"
  imageUrl        String?
  orderItems      OrderItem[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@index([categoryId])
  @@index([isAvailable])
}

model Order {
  id                    String        @id @default(cuid())
  guest                 Guest         @relation(fields: [guestId], references: [id])
  guestId               String
  status                OrderStatus   @default(PENDING)
  totalAmount           Float // Using Float instead of Decimal for SQLite
  specialRequests       String?
  deliveryNotes         String?
  estimatedDeliveryTime DateTime?
  actualDeliveryTime    DateTime?
  orderItems            OrderItem[]
  paymentStatus         PaymentStatus @default(PENDING)
  paymentMethod         String?
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt

  @@index([guestId])
  @@index([status])
  @@index([createdAt])
}

model OrderItem {
  id           String   @id @default(cuid())
  order        Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId      String
  menuItem     MenuItem @relation(fields: [menuItemId], references: [id])
  menuItemId   String
  quantity     Int      @default(1)
  unitPrice    Float // Using Float instead of Decimal for SQLite
  totalPrice   Float // Using Float instead of Decimal for SQLite
  specialNotes String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([orderId])
  @@index([menuItemId])
}

model VoiceSession {
  id         String        @id @default(cuid())
  guestId    String?
  roomNumber String?
  sessionId  String        @unique
  startTime  DateTime      @default(now())
  endTime    DateTime?
  transcript String?
  audioUrl   String?
  orderId    String?
  status     SessionStatus @default(ACTIVE)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  @@index([sessionId])
  @@index([roomNumber])
  @@index([guestId])
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  READY
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}

enum SessionStatus {
  ACTIVE
  COMPLETED
  ABANDONED
  ERROR
}
